name: POSDAO Tests

on:
  push:
    tags:
    - '*'
    inputs:
      branch:
        description: 'Branch to get tests from'
        required: true
        default: 'master'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to get tests from'
        required: true
        default: 'master'

jobs:
  posdao-tests:
    name: Nethermind POSDAO Tests
    runs-on: ${{ matrix.runner_type }}
    strategy:
      matrix:
        runner_type: [ds2v2,ds2v3,ds3v2,ds4v2,ds5v2,f32s,f64s,m5large,n2s2,ubuntu-20.04]        
    env:
      runId: ${{ matrix.runner_type }}-${{ github.workflow }}
      artifactsDir: artifacts/${{ github.repository }}
      iostatFile: artifacts/${{ github.repository }}/${{ matrix.runner_type }}-iostat.txt
      vmstatFile: artifacts/${{ github.repository }}/${{ matrix.runner_type }}-vmstat.txt
      timingFile: artifacts/${{ github.repository }}/${{ matrix.runner_type }}-timing.txt
    # Steps represent a sequence of tasks that will be executed as
    steps:
    # Start collecting stats
    - run: sudo apt -y install sysstat
    - run: mkdir -p ${{ runner.temp }}/${{ env.artifactsDir }}
    - run: iostat -yxmt 1 > ${{ runner.temp }}/${{ env.iostatFile }} &
    - run: vmstat -n 1 > ${{ runner.temp }}/${{ env.vmstatFile }} &
    - run: date -R > ${{ runner.temp }}/${{ env.timingFile }}
        
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x' # SDK Version to use; x will use the latest version of the 3.1 channel
    - name: Installing Linux packages
      run: |
        sudo apt-get update
        sudo apt-get -y install libsnappy-dev libc6-dev libc6
    - name: Cloning Nethermind repo
      run: |
        git clone https://github.com/NethermindEth/nethermind.git --recursive
        cd nethermind
        git submodule update --init src/rocksdb-sharp src/int256 src/Dirichlet
    - name: Cloning posdao-test-setup repo from Nethermind
      run: |
        git clone https://github.com/NethermindEth/posdao-test-setup
    - name: Building Nethermind binary
      run: |
        cd nethermind
        mkdir bin
        cd src/Nethermind
        dotnet build Nethermind.sln -c Release
        cp -r Nethermind.Runner/bin/Release/netcoreapp3.1/* /home/runner/work/nethermind/nethermind/nethermind/bin/
    - name: Setup the Node.js
      uses: actions/setup-node@v1.4.4
      with:
        node-version: '12'
    - name: Running POSDAO tests
      run: |
        cd posdao-test-setup
        npm run all-nethermind-no-watcher
      
    # Collect/upload stats
    - run: date -R >> ${{ runner.temp }}/${{ env.timingFile }}
    - run: pkill iostat && pkill vmstat
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: perfdata
        path: ${{ runner.temp }}/${{ env.artifactsDir }}
        if-no-files-found: error

  process:
    name: Process Perf Data
    runs-on: ubuntu-latest
    needs: [posdao-tests]
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
          architecture: x64
      - uses: actions/checkout@v2
        with:
          repository: pjquirk/runnerperf
          path: runnerperf
      - uses: actions/checkout@v2
        with:
          repository: pjquirk/iostat-tool
          path: runnerperf/iostat-tool
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2  
        with:
          name: perfdata
          path: runnerperf/data
      - name: Prereqs
        run: sudo apt -y install datamash  
      - name: Process stats
        run: |
          cd runnerperf
          (cd iostat-tool && python setup.py develop)
          ls -l data
          script/dumpcsv.sh data output
          script/aggregate.sh output ${{ github.repository }}
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: summary-perfdata
          path: runnerperf/output/summary.csv
          if-no-files-found: error
